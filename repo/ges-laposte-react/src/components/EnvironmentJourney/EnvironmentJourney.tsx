import React, { useState, useRef, useEffect } from 'react';
import { useIntersectionObserver } from '../../hooks/useIntersectionObserver';
import './EnvironmentJourney.css';

interface Milestone {
  id: string;
  year: string;
  title: string;
  description: string;
  impact: string;
  icon: string;
  achieved: boolean;
  details: {
    actions: string[];
    metrics: { label: string; value: string }[];
  };
}

const EnvironmentJourney: React.FC = () => {
  const [activeMilestone, setActiveMilestone] = useState<string | null>(null);
  const [isVisible, setIsVisible] = useState(false);
  const journeyRef = useRef<HTMLDivElement>(null);

  const milestones: Milestone[] = [
    {
      id: 'start',
      year: '2013',
      title: 'Point de D√©part',
      description: 'Lancement de notre strat√©gie environnementale',
      impact: 'Base de r√©f√©rence √©tablie',
      icon: 'üöÄ',
      achieved: true,
      details: {
        actions: [
          'Premi√®re mesure compl√®te des √©missions',
          'Cr√©ation d\'une √©quipe d√©di√©e RSE',
          'Engagement public de r√©duction'
        ],
        metrics: [
          { label: '√âmissions totales', value: '1.2M tCO‚ÇÇe' },
          { label: 'V√©hicules thermiques', value: '100%' }
        ]
      }
    },
    {
      id: 'elec-start',
      year: '2018',
      title: '√âlectrification Massive',
      description: 'D√©but de la transformation de notre flotte',
      impact: '-15% d\'√©missions',
      icon: '‚ö°',
      achieved: true,
      details: {
        actions: [
          'Premiers 5000 v√©hicules √©lectriques',
          'Installation bornes de recharge',
          'Formation des conducteurs'
        ],
        metrics: [
          { label: 'V√©hicules √©lectriques', value: '5 000' },
          { label: 'R√©duction CO‚ÇÇ', value: '-180k tonnes' }
        ]
      }
    },
    {
      id: 'renewable',
      year: '2020',
      title: '100% √ânergie Verte',
      description: 'Transition compl√®te vers l\'√©lectricit√© renouvelable',
      impact: '-25% d\'√©missions',
      icon: 'üå±',
      achieved: true,
      details: {
        actions: [
          'Contrats 100% √©nergie renouvelable',
          'Installation panneaux solaires',
          'Optimisation √©nerg√©tique b√¢timents'
        ],
        metrics: [
          { label: 'B√¢timents optimis√©s', value: '8 500' },
          { label: '√ânergie verte', value: '100%' }
        ]
      }
    },
    {
      id: 'current',
      year: '2024',
      title: 'Acc√©l√©ration',
      description: '39 000 v√©hicules √©lectriques en service',
      impact: '-42% d\'√©missions',
      icon: 'üèÜ',
      achieved: true,
      details: {
        actions: [
          'Leader europ√©en flotte √©lectrique',
          'Programme compensation carbone',
          'Innovation logistique verte'
        ],
        metrics: [
          { label: 'Flotte √©lectrique', value: '39 000' },
          { label: 'CO‚ÇÇ √©vit√©/an', value: '85k tonnes' }
        ]
      }
    },
    {
      id: 'target-2025',
      year: '2025',
      title: 'Objectif Interm√©diaire',
      description: 'R√©duction de 30% des √©missions',
      impact: '-30% vs 2013',
      icon: 'üéØ',
      achieved: false,
      details: {
        actions: [
          'Extension flotte √©lectrique',
          'Optimisation tourn√©es IA',
          'Partenariats verts'
        ],
        metrics: [
          { label: 'Objectif flotte', value: '45 000' },
          { label: 'R√©duction vis√©e', value: '-30%' }
        ]
      }
    },
    {
      id: 'milestone-2030',
      year: '2030',
      title: '√âtape Majeure',
      description: 'R√©duction de moiti√© des √©missions',
      impact: '-50% d\'√©missions',
      icon: 'üåç',
      achieved: false,
      details: {
        actions: [
          'Flotte 100% bas carbone',
          'B√¢timents z√©ro √©mission',
          'Supply chain verte'
        ],
        metrics: [
          { label: 'Neutralit√© scope 1&2', value: '100%' },
          { label: 'R√©duction scope 3', value: '-40%' }
        ]
      }
    },
    {
      id: 'net-zero',
      year: '2040',
      title: 'Z√©ro √âmission Nette',
      description: 'Neutralit√© carbone compl√®te',
      impact: '-90% + compensation',
      icon: 'üåü',
      achieved: false,
      details: {
        actions: [
          'Technologies de rupture',
          'Capture carbone √† grande √©chelle',
          '√âconomie circulaire compl√®te'
        ],
        metrics: [
          { label: 'R√©duction absolue', value: '-90%' },
          { label: 'Compensation', value: '100%' }
        ]
      }
    }
  ];

  useIntersectionObserver(journeyRef, (isIntersecting) => {
    if (isIntersecting && !isVisible) {
      setIsVisible(true);
    }
  });

  // Auto-play timeline animation
  useEffect(() => {
    if (!isVisible) return;

    let currentIndex = 0;
    const interval = setInterval(() => {
      if (currentIndex < milestones.length) {
        const milestone = milestones[currentIndex];
        // Trigger animation for each milestone
        const element = document.getElementById(`milestone-${milestone.id}`);
        if (element) {
          element.classList.add('revealed');
        }
        currentIndex++;
      } else {
        clearInterval(interval);
      }
    }, 300);

    return () => clearInterval(interval);
  }, [isVisible, milestones]);

  return (
    <div className={`environment-journey ${isVisible ? 'visible' : ''}`} ref={journeyRef}>
      <div className="journey-intro">
        <h2 className="section-title">Notre Trajectoire</h2>
        <p className="section-subtitle" style={{ textAlign: 'center' }}>
          Une transformation ambitieuse et m√©thodique vers la neutralit√© carbone,
          avec des objectifs valid√©s par la Science Based Targets initiative (SBTi).
          Cet engagement signifie que notre trajectoire est reconnue comme compatible avec les accords de Paris 
          et qu'elle contribue concr√®tement √† limiter le r√©chauffement climatique en dessous de 1,5¬∞C.
        </p>
      </div>

      <div className="timeline-container">
        <div className="timeline-line" />
        <div className="timeline-progress" style={{
          height: `${(milestones.filter(m => m.achieved).length / milestones.length) * 100}%`
        }} />
        
        {/* Indicateur de position actuelle */}
        <div className="current-progress-indicator" style={{
          top: `${(milestones.filter(m => m.achieved).length / milestones.length) * 100}%`
        }}>
          <div className="progress-pulse"></div>
        </div>
        
        <div className="milestones">
          {milestones.map((milestone, index) => (
            <div
              key={milestone.id}
              id={`milestone-${milestone.id}`}
              className={`milestone ${milestone.achieved ? 'achieved' : 'future'} ${
                activeMilestone === milestone.id ? 'active' : ''
              }`}
              style={{ animationDelay: `${index * 0.1}s` }}
              onClick={() => setActiveMilestone(
                activeMilestone === milestone.id ? null : milestone.id
              )}
            >
              <div className="milestone-marker">
                <div className="marker-icon">{milestone.icon}</div>
                <div className="marker-year">{milestone.year}</div>
                {milestone.achieved && (
                  <div className="achievement-badge">‚úì</div>
                )}
              </div>
              
              <div className="milestone-content">
                <h4 className="milestone-title">{milestone.title}</h4>
                <p className="milestone-description">{milestone.description}</p>
                <div className="milestone-impact">
                  <span className="impact-label">Impact:</span>
                  <span className="impact-value">{milestone.impact}</span>
                </div>
                {/* Affichage permanent des m√©triques */}
                <div className="milestone-metrics">
                  {milestone.details.metrics.map((metric, idx) => (
                    <div key={idx} className="metric-inline">
                      <span className="metric-label-small">{metric.label}:</span>
                      <span className="metric-value-small">{metric.value}</span>
                    </div>
                  ))}
                </div>
                
                {/* Actions cl√©s - toujours visibles */}
                <div className="milestone-actions">
                  <h5>Actions cl√©s r√©alis√©es :</h5>
                  <ul className="actions-inline">
                    {milestone.details.actions.map((action, idx) => (
                      <li key={idx} className="action-inline">
                        {action}
                      </li>
                    ))}
                  </ul>
                </div>
                
                {activeMilestone === milestone.id && (
                  <div className="milestone-details">
                    <div className="details-section">
                      <h5>Actions cl√©s</h5>
                      <ul className="actions-list">
                        {milestone.details.actions.map((action, idx) => (
                          <li key={idx} className="action-item">
                            <span className="action-bullet">‚Üí</span>
                            {action}
                          </li>
                        ))}
                      </ul>
                    </div>
                    
                    <div className="details-section">
                      <h5>M√©triques</h5>
                      <div className="metrics-list">
                        {milestone.details.metrics.map((metric, idx) => (
                          <div key={idx} className="metric-item">
                            <span className="metric-label">{metric.label}:</span>
                            <span className="metric-value">{metric.value}</span>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
        
      </div>

      {/* Interactive Features */}
      <div className="journey-features">
        <div className="feature-card">
          <div className="feature-icon">üìä</div>
          <h4>Trajectoire SBTi</h4>
          <p>Nos objectifs sont align√©s avec la science climatique pour limiter le r√©chauffement √† 1,5¬∞C</p>
        </div>
        
        <div className="feature-card">
          <div className="feature-icon">üîç</div>
          <h4>Transparence Totale</h4>
          <p>Reporting complet sur les 3 scopes d'√©missions avec audit externe annuel</p>
        </div>
        
        <div className="feature-card">
          <div className="feature-icon">ü§ù</div>
          <h4>Engagement Collectif</h4>
          <p>250 000 collaborateurs mobilis√©s pour atteindre nos objectifs environnementaux</p>
        </div>
      </div>

    </div>
  );
};

export default EnvironmentJourney;